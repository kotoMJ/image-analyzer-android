apply plugin: 'jacoco'
apply from: "../jacoco.exclude.gradle"


def jacocoBuildType = project.hasProperty('jacocoBuildType') ? project.property('jacocoBuildType') : 'jacocoBuildTypeNotFound'//release
def jacocoEnv = project.hasProperty('jacocoEnv') ? project.property('jacocoEnv') : "jacocoEnvMissingInParam"//dev

// JaCoCo automatically adds jacoco extension to all tasks of test type
tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
	jacoco.append = true
	jacoco.destinationFile = file("$buildDir/../../jacoco/jacocoAllModules.exec")
}

jacoco {
	toolVersion = "$jacoco_version"
	reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "test${jacocoEnv.capitalize()}${jacocoBuildType.capitalize()}UnitTest") {

// TODO This hack is required for older buildTools version
//	doFirst {
//		// Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
//		// We iterate through the compiled .class tree and rename $$ to $.
//		new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
//			if (file.name.contains('$$')) {
//				file.renameTo(file.path.replace('$$', '$'))
//			}
//		}
//	}

	group = "Reporting"
	description = "Generate Jacoco coverage reports for Debug build"

	reports {
		xml.enabled = true
		html.enabled = true
	}

	// generated classes
	classDirectories = fileTree(
			dir: "$buildDir/intermediates/classes/${jacocoEnv}/${jacocoBuildType}",
			excludes: project.excludeFromAnalysis
	) + fileTree(
			dir: "$buildDir/tmp/kotlin-classes/${jacocoEnv}${jacocoBuildType.capitalize()}",
			excludes: project.excludeFromAnalysis
	)

	// sources
	sourceDirectories = files([
			android.sourceSets.main.java.srcDirs,
			"src/main/java", "src/${jacocoBuildType}/java", "src/server/java"
	])
	println(">>>$buildDir/../../jacoco/jacocoAllModules.exec")
	executionData = files("$buildDir/../../jacoco/jacocoAllModules.exec")
}
