apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

kapt {
	useBuildCache = true
	correctErrorTypes = true // avoid unknown type replacing with NonExistentClass
}

android {

	compileSdkVersion sdk_version
	buildToolsVersion build_tools_version

	defaultConfig {
		minSdkVersion min_sdk_version
		targetSdkVersion sdk_version
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			minifyEnabled false
			testCoverageEnabled false
		}
	}
	dataBinding {
		enabled = true
	}
	flavorDimensions "env"

	productFlavors {
		mock {
			dimension = "env"
		}

		dev {
			dimension = "env"
		}

		production {
			dimension = "env"
		}
	}


}

dependencies {

	implementation project(':module-core')

	/**
	 *  UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST
	 */
	api "junit:junit:$junit_version"
	api "org.mockito:mockito-core:$mockito_version"
	api "org.powermock:powermock-module-junit4:$powermock_version"
	api "org.powermock:powermock-module-junit4-rule:$powermock_version"
	api "org.powermock:powermock-api-mockito2:$powermock_version"
	api "org.powermock:powermock-classloading-xstream:$powermock_version"
	api "android.arch.core:core-testing:$android_arch_version"

	implementation fileTree(dir: 'libs', include: ['*.jar'])

	implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
	maven {
		url 'http://dl.bintray.com/kotlin/kotlin-eap'
	}
	mavenCentral()
}
